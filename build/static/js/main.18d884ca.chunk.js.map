{"version":3,"sources":["user.jsx","actions.js","Dashboard.js","Home.jsx","notfound.js","serviceWorker.js","reducer.js","sagas.js","index.js","App.js"],"names":["User","document","getElementById","innerHTML","axios","get","this","props","user","repos_url","then","response","data","map","e","concat","name","description","stargazers_count","catch","error","console","log","react_default","a","createElement","Fragment","react_router","to","className","alt","width","height","src","avatar_url","login","location","company","following","followers","id","React","Component","t","LOAD_USER_DATA","LOAD_USER_DATA_SUCCESS","NOT_FOUND","actions","loadUserData","type","loadUserDataSuccess","notFound","found","DashboardComponent","hasOwnProperty","pathname","window","history","pushState","_this","formik_esm","initialValues","onSubmit","values","_ref","setSubmitting","validationSchema","Yup","shape","required","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","placeholder","value","onChange","onBlur","disabled","Dashboard","connect","state","userAvatar","userName","userLogin","userLocation","userCompany","userRepos","userFollowers","dispatch","src_Home","notfound","Boolean","hostname","match","initState","userReducer","arguments","length","undefined","action","Object","objectSpread","public_repos","watchLoadUserData","baseUrl","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","_context2","takeLatest","_marked2","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","applyMiddleware","run","ReactDOM","render","es","react_router_dom","exact","path","component","Home","Notfound","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18d884ca.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nclass UserComponent extends React.Component {\n    \n    componentDidMount() {      \n\n        document.getElementById('resultRepos').innerHTML = \"\"\n\n        axios.get(this.props.props.user.repos_url)\n        .then(function(response) {\n\n            response.data.map(e => {\n            \n                return ( document.getElementById('resultRepos').innerHTML += `\n                    <p class=\"nameRepos\">${e.name}</p>\n                    <p class=\"descritionRepos\">${e.description}</p>\n                    <p class=\"startRepos\">${e.stargazers_count}</p>\n                `)\n            })\n            \n        }).catch(error => {\n    \n        console.log(error);\n        });\n    }\n\n    componentDidUpdate() {\n\n        document.getElementById('resultRepos').innerHTML = \"\"\n        \n        axios.get(this.props.props.user.repos_url)\n        .then(function(response) {\n\n            response.data.map(e => {\n            \n                return ( document.getElementById('resultRepos').innerHTML += `\n                    <p class=\"nameRepos\">${e.name}</p>\n                    <p class=\"descritionRepos\">${e.description}</p>\n                    <p class=\"startRepos\">${e.stargazers_count}</p>\n                `)\n            })\n            \n        }).catch(error => {\n    \n        console.log(error);\n        });\n    }\n\n    render() {\n\n        return (\n                <React.Fragment>\n                    \n                    <Redirect to=\"/result\" />\n\n                    <div className=\"row mt-4\">\n                        <div className=\"col-4\">\n\n                            <img alt=\"\" width=\"260\" height=\"260\" className=\"\" src={this.props.props.user.avatar_url} />\n                            <p>{this.props.props.user.name}</p>\n                            <p>{this.props.props.user.login}</p>\n                            <p>{this.props.props.user.location}</p>\n                            <p>{this.props.props.user.company}</p>\n                            <p>Seguindo: {this.props.props.user.following}</p>\n                            <p>Seguidores: {this.props.props.user.followers}</p>\n\n                        </div>\n\n                        <div className=\"col-8\">\n                            <div id=\"resultRepos\"></div>\n                        </div>\n                    </div>\n        \n                </React.Fragment>\n        )\n    }\n\n}\nexport const User = UserComponent;","export const t = {\n    LOAD_USER_DATA: 'LOAD_USER_DATA',\n    LOAD_USER_DATA_SUCCESS: 'LOAD_USER_DATA_SUCCESS',\n    NOT_FOUND: 'NOT_FOUND'\n};\n\nexport const actions = ({\n    loadUserData: name => ({\n        type: t.LOAD_USER_DATA,\n        name\n    }),\n\n    loadUserDataSuccess: data => ({\n        type: t.LOAD_USER_DATA_SUCCESS,\n        data\n    }),\n\n    notFound: data => ({\n        type: t.NOT_FOUND,\n        data\n    })\n});","import React from 'react';\nimport {Formik} from 'formik';\nimport './dashboard.css';\nimport * as Yup from 'yup';\nimport { User as UserComponent } from './user';\nimport {actions} from './actions';\nimport {connect} from 'react-redux';\n\nimport { Redirect } from 'react-router-dom';\n\nlet found = false,\n    notFound = false\n\nclass DashboardComponent extends React.Component {\n\n    componentDidUpdate() {\n\n        if ( this.props.user.user !== \"NOT_FOUND\" && this.props.user.hasOwnProperty('user') ) {\n            found = true\n            this.props.location.pathname = \"/result\"\n            window.history.pushState(\"object or string\", \"Title\", \"/result\");\n\n        }\n\n        if ( this.props.user.user === \"NOT_FOUND\" ) {\n            notFound = true\n            found = false\n            this.props.location.pathname = \"/notfound\"\n            window.history.pushState(\"object or string\", \"Title\", \"/notfound\");\n        }\n\n        this.props.location.pathname === \"/notfound\" ? notFound = true : notFound = false\n\n    }\n\n    render() {\n\n        if ( this.props.user.user !== \"NOT_FOUND\" && this.props.user.hasOwnProperty('user') ) {\n            found = true\n            //this.props.history.push('/result')\n            this.props.location.pathname = \"/result\"\n            window.history.pushState(\"object or string\", \"Title\", \"/result\");\n            \n        }\n\n        if ( this.props.user.user === \"NOT_FOUND\" ) {\n            notFound = true\n            found = false\n            this.props.location.pathname = \"/notfound\"\n            window.history.pushState(\"object or string\", \"Title\", \"/notfound\");\n        }\n\n        this.props.location.pathname === \"/notfound\" ? notFound = true : notFound = false\n\n        return (\n            <div>\n                \n                <Formik\n                    initialValues={{name: ''}}\n                    onSubmit={(values, {setSubmitting}) => {\n                        this.props.loadUserData(values.name);\n                        setSubmitting(false);\n                    }}\n                    validationSchema={Yup.object().shape({\n                        name: Yup.string().required('Required')\n                    })}\n                >\n                    {props => {\n                        const {\n                            values,\n                            touched,\n                            errors,\n                            isSubmitting,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit\n                        } = props;\n\n                        return (\n                            <form className=\"d-flex justify-content-center\" onSubmit={handleSubmit}>\n                                <input\n                                    id=\"name\"\n                                    placeholder=\"Enter your username\"\n                                    type=\"text\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={errors.name && touched.name ? 'error form-control' : 'form-control'}\n                                />\n                                {errors.name && errors.touched && <div className=\"input-feedback\">{errors.name}</div>}\n                                \n                                <button type=\"submit\" disabled={isSubmitting} >\n                                    <i className=\"fas fa-search\"></i>\n                                </button>\n                                \n                            </form>\n                        );\n                    }}\n                </Formik>\n\n                <div className=\"output\">\n\n                    { notFound ? <Redirect to=\"/notfound\" /> : \"\" }\n\n                    { found ? <UserComponent props={this.props.user} /> : \"\" }\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        user: state.user,\n        userAvatar: state.user.userAvatar,\n        userName: state.user.userName,\n        userLogin: state.user.userLogin,\n        userLocation: state.user.userLocation,\n        userCompany: state.user.userCompany,\n        userRepos: state.user.userRepos,\n        userFollowers: state.user.userFollowers,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    \n    return {\n        loadUserData: name => dispatch(actions.loadUserData(name))\n    };\n};\n\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(DashboardComponent);\n","import React from 'react'\nimport './Home.css';\nimport { Dashboard } from './Dashboard';\n\nexport default props => {\n    \n    return (\n    \n        <div className=\"containerHome\">\n            <h1>Github <i>Search</i></h1>\n            <Dashboard {...props} />\n        </div>\n        \n    )\n    \n}","import React from 'react'\nimport './Home.css';\nimport { Dashboard } from './Dashboard';\n\nexport default props => {\n\n  return (\n  \n      <React.Fragment>\n          <div className=\"containerNotFound\">\n              <h1>Github <i>Search</i></h1>\n              <Dashboard {...props} />\n          </div>\n\n          <div id=\"msgNotFound\">\n              User not found :(\n          </div>\n      </React.Fragment>\n      \n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {t} from './actions';\n\nconst initState = {\n    data: null\n};\n\nexport const userReducer = (state = initState, action) => { \n\n    switch (action.type) {\n        case t.LOAD_USER_DATA_SUCCESS:\n            return {\n                ...state,\n                user: action.data,\n                userAvatar: action.data.avatar_url,\n                userName: action.data.name,\n                userLogin: action.data.login,\n                userLocation: action.data.location,\n                userCompany: action.data.company,\n                userRepos: action.data.public_repos,\n                userFollowers: action.data.followers\n            };\n        \n        case t.NOT_FOUND:\n            return {\n                ...state,\n                user: \"NOT_FOUND\"\n            };\n\n        default:\n            return state;\n    }\n};","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects'\nimport {actions, t} from './actions';\nconst baseUrl = 'https://api.github.com/users';\n\nfunction* loadUserData(action) {\n    \n    try {\n        const response = yield axios.get(`${baseUrl}/${action.name}`)\n        yield put(actions.loadUserDataSuccess(response.data))\n        \n    } catch(e) {\n        yield put(actions.notFound(\"NOT FOUND\"))\n    }\n\n}\n\nexport function* watchLoadUserData() {\n    yield takeLatest(t.LOAD_USER_DATA, loadUserData)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {userReducer} from './reducer';\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport {watchLoadUserData} from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(combineReducers({\n    user: userReducer,\n    userRepos: userReducer\n}), applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(watchLoadUserData);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Notfound from './notfound';\n\nexport default props => {\n  \n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\"> \n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/result\" component={Home} />\n          <Route path=\"/notfound\" component={Notfound} />\n        </Switch>\n      </header>\n    </div>\n\n  )\n}"],"sourceRoot":""}